Converting dat$interval into zero-padded string:
sprintf("%04d", dat$interval)
## What is the average daily activity pattern?

### 1 Time series plot of 5-minute interval and average number of steps taken

The interval data is first converted to POSIXlt (via an intermediate string conversion, `dat$ints` = *Interval String*) and saved to new variable `dateintp` (date-interval-posix):

```{r}
dat$ints <- sprintf("%04d", dat$interval)
dat$dateintp <- strptime(paste(dat$date, dat$ints), format="%Y-%m-%d %H%M")
```

The plotting of a particular day is tested using
Since for all days, the x-axis has the same value we simply assign the interval of a random day to the `x`-variable:

```{r}
x <- dat[dat$date=="2012-10-01", 3]
plot(strptime(x, format="%H%M"), dat[dat$date=="2012-10-11", 1], type="l")
```


# technique to replace NA with mean by subset in R and the impute.mean function 
# described at http://stackoverflow.com/a/9322975/3657371
impute.mean <- function(x) replace(x, is.na(x), mean(x, na.rm = TRUE))

# create a new dataset that is equal to the original dataset, but with the 
# missing data filled in
# original dataset is first three variables of the [activity] dataframe
activity.imputed <- plyr::ddply(activity[1:3], .(interval), transform,
                          steps = impute.mean(steps),
                          date = date,
                          interval = interval)

# sort by date and interval
activity.imputed <- activity.imputed[order(activity.imputed$date,
                                           activity.imputed$interval),]

# renumber rownames
row.names(activity.imputed) <- 1:nrow(activity.imputed)
